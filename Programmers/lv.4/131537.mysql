SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
     , PRODUCT_ID
     , USER_ID
     , SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE BETWEEN '2022-03-01 00:00:00' AND '2022-03-31 23:59:59'

UNION ALL

SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
     , PRODUCT_ID
     , NULL
     , SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE BETWEEN '2022-03-01 00:00:00' AND '2022-03-31 23:59:59'

ORDER BY SALES_DATE
       , PRODUCT_ID
       , USER_ID

-- 240105
SELECT DATE_FORMAT(SALES_DATE, "%Y-%m-%d") SALES_DATE
    , PRODUCT_ID
    , USER_ID
    , SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE LIKE "2022-03%"

UNION ALL

SELECT DATE_FORMAT(SALES_DATE, "%Y-%m-%d") SALES_DATE
    , PRODUCT_ID
    , NULL
    , SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE LIKE "2022-03%"

ORDER BY SALES_DATE
    , PRODUCT_ID
    , USER_ID

-- 240228
-- 2022년 3월의 오프라인/온라인 상품 판매 데이터의 판매 날짜, 상품ID, 유저ID, 판매량
-- OFFLINE_SALE 테이블의 판매 데이터의 USER_ID 값은 NULL로 표시
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') SALES_DATE
    , PRODUCT_ID
    , USER_ID
    , SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE LIKE '2022-03-%'

UNION

SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') SALES_DATE
    , PRODUCT_ID
    , NULL USER_ID
    , SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE LIKE '2022-03-%'

ORDER BY SALES_DATE
    , PRODUCT_ID
    , USER_ID
